name: Deploy to staging
on:
  workflow_run:
    workflows: [Merge to main]
    types:
      - completed
    branches:
      - main
  workflow_dispatch: {}
  pull_request:
    types: [labeled]

permissions:
  id-token: write
  contents: read

jobs:
  deploy-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event.label.name == 'deploy:staging' }}
    strategy:
      matrix:
        theme: [cpr, cclw, mcf, ccc]

    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/navigator-new-frontend-github-actions
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1

      - name: Login to Amazon ECR (staging)
        id: login-ecr-staging
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push to ECR with 'latest' tag
        id: build-image
        env:
          ECR_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
          IMAGE_TAG: latest
          AWS_REGION: eu-west-1
          ECR_REPOSITORY: navigator-frontend-${{ matrix.theme }}
          THEME: ${{ matrix.theme }}
        # @related: GITHUB_SHA_ENV_VAR
        run: |
          docker build --build-arg THEME=${THEME} --build-arg GITHUB_SHA=$(git rev-parse HEAD) -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
